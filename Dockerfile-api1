# Imgem com Runtime para executar o projeto
FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-alpine3.11

# Diretório onde os arquivos serão copiados e onde os comandos serão executados
WORKDIR /app

# Imagem com SDK para fazer o build da aplicação
FROM correia97/netcoresdksonar:3.1-alpine3.12 as build

# Diretório onde os arquivos serão copiados e onde os comandos serão executados
WORKDIR /app

# Arquivos do projeto
COPY ./src/Micro1/Micro1.csproj ./src/Micro1/
COPY ./src/Infra.Services/Infra.Services.csproj ./src/Infra.Services/

# Argumento informado durante o build
ARG sonarLogin

# Executa o comando de restore dos pacotes
RUN dotnet restore ./src/Micro1/

# Todos os arquivos da pasta corrende para dentro do container
COPY ./src/Micro1/ ./src/Micro1/
COPY ./src/Infra.Services/ ./src/Infra.Services/

# Start do scanner
RUN dotnet sonarscanner begin /k:"service_comunication" \
                              /o:"correia97" /d:sonar.host.url="https://sonarcloud.io" \
                              /d:sonar.login=$sonarLogin \
                              /d:sonar.exclusions=**/*.js,**/*.css,**/obj/**,**/*.dll,**/*.html,**/*.cshtml,*-project.properties

# executa o build do projeto
RUN dotnet build  ./src/Micro1/Micro1.csproj -c Release

# Realiza a Analise
RUN dotnet sonarscanner end /d:sonar.login=$sonarLogin 

# publica o projeto na pasta out
RUN dotnet publish  ./src/Micro1/Micro1.csproj -c Release -o out

# Copia os arquivos publicados do container de build para o container final
COPY --from=build /app/out .

ENV ASPNETCORE_ENVIRONMENT=Docker


# Define qual o executavel do container
ENTRYPOINT [ "dotnet","Micro1.dll"]

